import { generateResponse } from '@/lib/deepseek';

const JOB_TITLES = [
  "HR Manager",
  "Senior HR Business Partner",
  "HR Director",
  "Talent Acquisition Manager",
  "HR Operations Manager",
  "Employee Relations Manager",
  "HR Strategy Manager",
  "HR Development Manager",
  "HR Analytics Manager",
  "HR Compliance Manager"
];

const JOB_DESCRIPTIONS = [
  "Leading HR operations and talent management for a dynamic organization",
  "Driving strategic HR initiatives and organizational development",
  "Managing end-to-end HR processes and employee lifecycle",
  "Overseeing talent acquisition and workforce planning",
  "Implementing HR policies and ensuring compliance",
  "Developing and executing HR strategies aligned with business goals",
  "Managing employee relations and workplace culture",
  "Leading HR transformation and digital initiatives",
  "Overseeing performance management and career development",
  "Driving diversity, equity, and inclusion programs"
];

const RESUME_TEMPLATES = [
  "Experienced HR professional with {years} years of expertise in {focus}. Proven track record in {achievement}. Strong skills in {skills}.",
  "Dynamic HR leader with {years} years of experience in {focus}. Successfully {achievement}. Expertise in {skills}.",
  "Strategic HR manager with {years} years of background in {focus}. Notable {achievement}. Proficient in {skills}.",
  "Results-driven HR specialist with {years} years of experience in {focus}. Demonstrated {achievement}. Skilled in {skills}.",
  "Innovative HR professional with {years} years of expertise in {focus}. Achieved {achievement}. Advanced knowledge in {skills}."
];

const FOCUS_AREAS = [
  "talent acquisition and management",
  "employee relations and engagement",
  "organizational development",
  "HR strategy and planning",
  "performance management",
  "learning and development",
  "compensation and benefits",
  "HR operations and systems",
  "workforce planning",
  "diversity and inclusion"
];

const ACHIEVEMENTS = [
  "reduced employee turnover by 30%",
  "implemented successful talent development programs",
  "streamlined HR processes resulting in 40% efficiency gain",
  "led successful organizational restructuring",
  "developed and executed comprehensive HR strategies",
  "improved employee satisfaction scores by 25%",
  "managed successful recruitment campaigns",
  "implemented new HR technology solutions",
  "developed innovative employee engagement programs",
  "led successful change management initiatives"
];

const SKILLS = [
  "strategic planning, talent management, and HR analytics",
  "employee relations, performance management, and HR systems",
  "organizational development, change management, and leadership",
  "recruitment, training, and HR operations",
  "compensation, benefits, and HR compliance",
  "workforce planning, talent acquisition, and HR strategy",
  "employee engagement, culture development, and HR technology",
  "HR policy development, implementation, and compliance",
  "learning and development, succession planning, and HR metrics",
  "diversity and inclusion, employee wellness, and HR innovation"
];

function getRandomElement<T>(array: T[]): T {
  return array[Math.floor(Math.random() * array.length)];
}

function generateUniqueResumeContent(jobPositionId: string, isAI: boolean): string {
  const template = getRandomElement(RESUME_TEMPLATES);
  const years = Math.floor(Math.random() * 10) + 5; // 5-15 years
  const focus = getRandomElement(FOCUS_AREAS);
  const achievement = getRandomElement(ACHIEVEMENTS);
  const skills = getRandomElement(SKILLS);

  return template
    .replace("{years}", years.toString())
    .replace("{focus}", focus)
    .replace("{achievement}", achievement)
    .replace("{skills}", skills);
}

export async function generateJobPosition(): Promise<{ title: string; description: string }> {
  const title = getRandomElement(JOB_TITLES);
  const description = getRandomElement(JOB_DESCRIPTIONS);
  
  return {
    title,
    description
  };
}

export async function generateResume(jobPositionId: string, isAI: boolean): Promise<Resume> {
  const content = generateUniqueResumeContent(jobPositionId, isAI);
  const aiScore = isAI ? Math.floor(Math.random() * 40) + 60 : Math.floor(Math.random() * 40) + 20;
  const now = new Date();

  return {
    id: Date.now().toString(),
    content,
    aiScore,
    isAIGenerated: isAI,
    jobPositionId,
    createdAt: now,
    updatedAt: now
  };
}

export async function analyzeResume(resume: string): Promise<number> {
  const prompt = `Analyze this resume and rate how likely it was generated by AI (0-100):
${resume}`;

  const response = await generateResponse(prompt);
  const score = typeof response === 'string' ? parseInt(response) : 50;
  return Math.min(Math.max(score, 0), 100);
}

export interface Resume {
  id: string;
  content: string;
  aiScore: number;
  isAIGenerated: boolean;
  jobPositionId: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface JobPosition {
  id: string;
  title: string;
  description: string;
}

async function parseResponse(response: string | ReadableStream<Uint8Array>): Promise<string> {
  if (typeof response === 'string') {
    return response;
  }
  const reader = response.getReader();
  const decoder = new TextDecoder();
  let result = '';
  while (true) {
    const { done, value } = await reader.read();
    if (done) break;
    result += decoder.decode(value);
  }
  return result;
}

export async function generateJobDescription(): Promise<JobPosition> {
  const prompt = `Generate a detailed job description for an HR Manager position in a tech company. Include:
  1. Company background (a tech company in China)
  2. Job responsibilities
  3. Requirements
  4. Benefits
  Format the response as a JSON object with title and description fields.`;

  const response = await generateResponse(prompt, '', false) as string;
  const data = JSON.parse(response);
  
  return {
    id: 'generated',
    title: data.title,
    description: data.description
  };
} 